---
#Gather facts about openstack images avaialble and store in list or dictionaries
#Show all openstack available images
- name: Retrieve facts for all instances running
  os_server_facts: 
    server: server*
    



#   # Production
- name: Adding dbserver hosts to dynamic inventory in memory
  add_host:
    hostname: "{{ openstack_servers[ item.0 ].accessIPv4 }}"
    #groups: "{{ item.metadata['group'] }}"
    groups:
      - dbserver
      - harvester
    ansible_user: ec2-user
    ansible_ssh_private_key_file: ~/ansible/testKey.pem
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  #loop: '{{ openstack_servers }}'
  when: item.0 < {{ count }}
  with_indexed_items: "{{ openstack_servers }}"

- name: Adding webserver hosts to dynamic inventory in memory
  add_host:
    hostname: "{{ openstack_servers[ item.0 ].accessIPv4 }}"
    #groups: "{{ item.metadata['group'] }}"
    groups:
      - webserver
    ansible_user: ec2-user
    ansible_ssh_private_key_file: ~/ansible/testKey.pem
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  #loop: '{{ openstack_servers }}'
  when: item.0 == {{ count }}
  with_indexed_items: "{{ openstack_servers }}"

# --------------------- end production -------------













# - name: adding hosts to dynamic inventory in memory
#   add_host:
#     # hostname: "{{ groups.dbserver[2] }}"
#     hostname: "{{ image_facts[{{ count - 1 }}] }}"
#     groups:
#       - webserver
#     ansible_user: ec2-user
#     ansible_ssh_private_key_file: ~/ansible/testKey.pem
#     ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  
# - name: adding hosts to dynamic inventory in memory
#   add_host:
#     hostname: "{{ item.accessIPv4 }}"
#     #groups: "{{ item.metadata['group'] }}"
#     groups:
#       - dbserver
#       - harvester
#     ansible_user: ec2-user
#     ansible_ssh_private_key_file: ~/ansible/testKey.pem
#     ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
#   loop: '{{ openstack_servers }}'






# - name: Store image names and id in list 
#   set_fact:
#     image_facts: "{{ image_facts|default([]) + [ { 'name': item.name, 'id': item.id } ] }}"
#   loop: '{{ openstack_image }}'
#   when: item.name is defined

# - name: Print the values of image_facts
#   debug:
#     msg: "Image name: {{ item.name}} and Image ID: {{ item.id }}" 
#   loop: '{{ image_facts }}'
